#spring.aop.auto=true
#spring.aop.proxy-target-class=false


#项目设置日志
logging.config: classpath:log_config.xml
# 这个是相对路径
logging.path: test_log_path



#设置日志--------

##org.springframework.web log level
#logging.level.org.springframework.web=DEBUG
#logging.level.root=info
## 设置路径,相对路径
#logging.file=my.log


# 设置mybatis显示log
#增加打印sql语句，一般用于本地开发测试
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl


# 设置数据库连接

spring.datasource.name = demo
spring.datasource.url = jdbc:mysql://120.77.223.13:3306/demo
spring.datasource.username = root
spring.datasource.password = 19920202qwer
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


# 设置mybatis 连接

mybatis.mapper-locations=classpath:mapper/*.xml


# 设置redis
spring.redis.database=4  
spring.redis.host=hostname  
spring.redis.password=password  
spring.redis.port=6379  
spring.redis.timeout=2000  
spring.redis.pool.max-idle=8  
spring.redis.pool.min-idle=0  
spring.redis.pool.max-active=8  
spring.redis.pool.max-wait=-1 

